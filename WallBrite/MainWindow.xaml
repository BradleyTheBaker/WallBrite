<Window x:Class="WallBrite.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:WallBrite"
        mc:Ignorable="d"
        Title="WallBrite" Height="450" Width="1200"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        Icon="pack://application:,,,/WallBrite;component/Icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel x:Name="MainPanel">
        <tb:TaskbarIcon IconSource="{StaticResource trayIcon}" ToolTipText="WallBrite" MenuActivation="LeftOrRightClick" DoubleClickCommand="{Binding OpenWindowCommand}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Open" Command="{Binding OpenWindowCommand}"/>
                    <MenuItem Header="Run at Startup" IsCheckable="True" IsChecked="{Binding Manager.StartsOnStartup}" Command="{Binding Manager.StartupSetCommand}"/>
                    <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <Border BorderBrush="#FFABADB3" BorderThickness="0 0 1 0">
            <Expander ExpandDirection="Right" IsExpanded="True" Background="GhostWhite">
                <StackPanel x:Name="SidePanel" DockPanel.Dock="Left" Background="GhostWhite" Width="105" Margin="0 0 5 0">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Margin" Value="0, 2" />
                        </Style>
                    </StackPanel.Resources>

                    <TextBlock FontWeight="Bold" FontSize="14" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="0 5">Library Controls</TextBlock>

                    <StackPanel Margin="0 0 0 5">
                        <Button Command="{Binding NewCommand}">New Library</Button>
                        <Button Command="{Binding OpenCommand}">Open Library</Button>
                        <Button Command="{Binding Library.SaveCommand}">Save Library</Button>
                    </StackPanel>

                    <Border BorderBrush="#FFABADB3" BorderThickness="0 0 0 1" Margin="0 0 0 5" ></Border>

                    <Border BorderBrush="SkyBlue">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="Padding" Value="2 0"/>
                                <Style.Triggers>
                                    <DataTrigger
                                    Binding ="{Binding Library.IsEmpty}" 
                                            Value="false">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Padding" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <Button Command="{Binding Library.AddFilesCommand}">Add Files</Button>
                            <Button Command="{Binding Library.AddFolderCommand}">Add Folder</Button>
                        </StackPanel>
                    </Border>

                    <StackPanel Margin="0 5 0 8">
                        <TextBlock>Sort By:</TextBlock>
                        <ComboBox x:Name="SortTypeBox" SelectionChanged="SortTypeChanged" SelectedValuePath="Content" SelectedIndex="1">
                            <ComboBoxItem>Brightness</ComboBoxItem>
                            <ComboBoxItem>Date Added</ComboBoxItem>
                            <ComboBoxItem>Enabled</ComboBoxItem>
                        </ComboBox>
                        <TextBlock>Sort Direction:</TextBlock>
                        <ComboBox x:Name="SortDirectionBox" SelectionChanged="SortDirectionChanged" SelectedValuePath="Content" SelectedIndex="1">
                            <ComboBoxItem>Descending</ComboBoxItem>
                            <ComboBoxItem>Ascending</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <Border BorderBrush="#FFABADB3" BorderThickness="0 0 0 1" Margin="0 0 0 5"></Border>

                    <StackPanel>
                        <StackPanel.Resources>
                            <local:CutoffConverter x:Key="ManualSetConverter" Cutoff="1" />
                            <Style x:Key="SidePanelButtonStyle">
                                <Setter Property="Button.Margin" Value="0 2" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding ="{Binding ElementName=imageGrid, Path=SelectedItems.Count}"
                                        Value="0">
                                        <Setter Property="Button.IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ManualSetButtonStyle">
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding ="{Binding ElementName=imageGrid, Path=SelectedItems.Count}"
                                        Value="0">
                                        <Setter Property="Button.IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding ="{Binding ElementName=imageGrid, Path=SelectedItems.Count, Converter={StaticResource ManualSetConverter}}" 
                                        Value="true">
                                        <Setter Property="Button.IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock TextAlignment="Center" FontWeight="Medium">Selection:</TextBlock>
                        <Button x:Name="EnableButton" Style="{StaticResource SidePanelButtonStyle}" Command="{Binding Library.EnableCommand}" CommandParameter="{Binding ElementName=imageGrid, Path=SelectedItems}">Enable</Button>
                        <Button x:Name="DisableButton" Style="{StaticResource SidePanelButtonStyle}" Command="{Binding Library.DisableCommand}" CommandParameter="{Binding ElementName=imageGrid, Path=SelectedItems}">Disable</Button>
                        <Button x:Name="RemoveButton" Style="{StaticResource SidePanelButtonStyle}" Command="{Binding Library.RemoveCommand}" CommandParameter="{Binding ElementName=imageGrid, Path=SelectedItems}">
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center">Remove from Library</TextBlock>
                        </Button>
                        <Button x:Name="ManualSetButton" Style="{StaticResource ManualSetButtonStyle}" Command="{Binding Manager.ManualSetCommand}" CommandParameter="{Binding ElementName=imageGrid, Path=SelectedItems}">
                            <Button.ToolTip>Manually set the selected image as wallpaper. Note that this will be overriden during the next scheduled wallpaper update!</Button.ToolTip>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center">Set as Wallpaper (Manual)</TextBlock>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Expander>
        </Border>
        <Border BorderBrush="#FFABADB3" BorderThickness="0 1 0 0" DockPanel.Dock="Bottom">
            <Expander ExpandDirection="Up" IsExpanded="False" Header="Automation Settings" Background="GhostWhite">
                <Expander.Resources>
                    <local:PercentConverter x:Key="PercentConverter" />
                </Expander.Resources>
                <Grid x:Name="BottomPanel"  Background="GhostWhite" Height="110" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="1"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="1"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" FontWeight="Medium" VerticalAlignment="Top" Margin="0 5 0 0">Wallpaper Change Settings</TextBlock>

                        <StackPanel x:Name="changeSettingsPanel" Grid.Row="1" VerticalAlignment="Bottom" Margin="10 0 10 5">
                            <StackPanel ToolTipService.ShowDuration="15000" Orientation="Horizontal" Margin="0 0 0 5" HorizontalAlignment="Center">
                                <StackPanel.ToolTip>
                                    <TextBlock Width="300" TextWrapping="Wrap">
                                            Sets the time between each "check" for a wallpaper change. During each check, WallBrite will
                                            try to set a wallpaper which best matches the current daylight amount. If there is no better-suited
                                            wallpaper than the current one, there will be no change. In effect this sets the amount of time before
                                            a wallpaper change can possibly occur.
                                    </TextBlock>
                                </StackPanel.ToolTip>
                                <StackPanel.Resources>
                                    <local:CutoffConverter x:Key="HoursConverter" Cutoff="0" />
                                </StackPanel.Resources>
                                <TextBlock Margin="0 0 5 0" VerticalAlignment="Center">
                                    <TextBlock.Inlines>
                                        <Run Text="Change wallpaper at" />
                                        <Run FontWeight="Medium" Text="most" />
                                        <Run Text="every:"/>
                                    </TextBlock.Inlines>
                                </TextBlock>
                                <xctk:IntegerUpDown x:Name="updateHours" Maximum="23" Minimum="0" Value="{Binding UpdateIntervalHours}"></xctk:IntegerUpDown>
                                <TextBlock Margin="2 0 5 0" VerticalAlignment="Center">hrs</TextBlock>
                                <xctk:IntegerUpDown x:Name="updateMins" Value="{Binding UpdateIntervalMins}">
                                    <xctk:IntegerUpDown.Style>
                                        <Style TargetType="{x:Type xctk:IntegerUpDown}">
                                            <Setter Property="Minimum" Value="1" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=updateHours, Path=Value, Converter={StaticResource HoursConverter}}" Value="true">
                                                    <Setter Property="Minimum" Value="0" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=updateHours, Path=Value, Converter={StaticResource HoursConverter}}" Value="false">
                                                    <Setter Property="Minimum" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </xctk:IntegerUpDown.Style>
                                </xctk:IntegerUpDown>
                                <TextBlock Margin="2 0 0 0" VerticalAlignment="Center">mins</TextBlock>
                            </StackPanel>
                            <Grid ToolTipService.ShowDuration="15000" Width="{Binding ElementName=changeSettingsPanel, Path=ActualWidth}" HorizontalAlignment="Left">
                                <Grid.ToolTip>
                                    <TextBlock Width="300" TextWrapping="Wrap">
                                            The time until the next wallpaper change using the current library and automation settings. If this is too long, try changing the setting above to a shorter interval, or add more
                                            wallpapers to the library with more varied brightness levels.
                                    </TextBlock>
                                </Grid.ToolTip>
                                <ProgressBar VerticalAlignment="Bottom" Height="25" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Path=Progress, Converter={StaticResource PercentConverter}}" x:Name="timeProgress"></ProgressBar>
                                <TextBlock Text="{Binding ProgressReport}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Wallpaper Style:" Margin="0 3 5 0" VerticalAlignment="Center"/>
                                <ComboBox x:Name="wallStyleSelector" Width="80" ToolTipService.ShowDuration="15000" Margin="0 5 0 0" ItemsSource="{Binding WallpaperStyles}" SelectedItem="{Binding WallpaperStyle}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="1" Margin="0 5" BorderThickness="0 0 1 0" BorderBrush="#FFABADB3"/>
                    <Grid Grid.Column="2" Margin="0 0 0 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" FontWeight="Medium" VerticalAlignment="Top" Margin="0 5 0 0">Time of Day Settings</TextBlock>
                        <StackPanel Grid.Row="1" VerticalAlignment="Bottom">
                            <Grid Width="265" HorizontalAlignment="Center" Margin="5 0 5 5">
                                <Grid.ToolTip>
                                    The current daylight level (as a percentage of the max daylight level, at the brightest time of day)
                                </Grid.ToolTip>
                                <ProgressBar Height="25" Grid.Column="1" Minimum="0" Maximum="1" Value="{Binding CurrentDaylight}"></ProgressBar>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Current Daylight: {0}%">
                                            <Binding Path="CurrentDaylight" Converter="{StaticResource PercentConverter}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <StackPanel Margin="0 0 20 0">
                                    <StackPanel.ToolTip>
                                        At the brightest time of day, the daylight level will be 100%.
                                    </StackPanel.ToolTip>
                                    <TextBlock Margin="0 3">Brightest Time of Day</TextBlock>
                                    <xctk:TimePicker x:Name="brightestPicker" Value="{Binding BrightestTime}" Width="122" HorizontalAlignment="Left"></xctk:TimePicker>
                                </StackPanel>
                                <StackPanel>
                                    <StackPanel.ToolTip>
                                        At the darkest time of day, the daylight level will be 0%.
                                    </StackPanel.ToolTip>
                                    <TextBlock Margin="0 3">Darkest Time of Day</TextBlock>
                                    <xctk:TimePicker x:Name="darkestPicker" Value="{Binding DarkestTime}" Width="122" HorizontalAlignment="Left"></xctk:TimePicker>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="3" Margin="0 5" BorderThickness="0 0 1 0" BorderBrush="#FFABADB3"/>
                    <Grid Grid.Column="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" FontWeight="Medium" Margin="0 5" VerticalAlignment="Top"> Current Wallpaper</TextBlock>
                        <Grid Grid.Row="1" Margin="10 0 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" HorizontalAlignment="Right" Margin="0 0 5 0" Height="75" Width="150" BorderBrush="Black" BorderThickness="1" Background="{Binding CurrentWallBack}">
                                <Image HorizontalAlignment="Center" MaxHeight="75" Source="{Binding CurrentWallThumb}"></Image>
                            </Border>
                            <StackPanel Margin="5 0 0 0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Grid Width="160" HorizontalAlignment="Left">
                                    <Grid.ToolTip>
                                        Currently set wallpaper's brightness (as a percentage of the maximum possible brightness of an all white-pixel image).
                                    </Grid.ToolTip>
                                    <ProgressBar Height="25" Grid.Column="1" Minimum="0" Maximum="1" Value="{Binding CurrentWallBrightness}"></ProgressBar>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="Wallpaper Brightness: {0}%">
                                                <Binding Path="CurrentWallBrightness" Converter="{StaticResource PercentConverter}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Grid>
                                <TextBlock Width="160" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Filename: {0}">
                                            <Binding Path="CurrentWallFileName" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Expander>
        </Border>
        <Grid>
            <TextBlock Grid.ZIndex="1" FontWeight="Medium" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" Width="250" Height="50" Margin="4,135,0,0" TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger
                                    Binding ="{Binding Library.IsEmpty}" 
                                            Value="false">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                Get started by adding some images to the library!
            </TextBlock>
            <Grid Grid.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Image VerticalAlignment="Top" Source="/WallBrite;component/Icon.png" Width="100" Margin="0, -102, 0 , 0">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding ="{Binding Library.IsEmpty}" 
                                            Value="false">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock VerticalAlignment="Bottom" TextAlignment="Center" Grid.ColumnSpan="2">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding ="{Binding Library.IsEmpty}" 
                                            Value="false">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <TextBlock.Inlines>
                        <Span FontSize="40" FontWeight="Bold">Welcome to WallBrite!</Span>
                        <LineBreak/>
                        <Span>WallBrite manages your desktop wallpapers by matching them up with the time of day</Span>
                    </TextBlock.Inlines>
                </TextBlock>
            </Grid>
            <ListView x:Name="imageGrid" ItemsSource="{Binding}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.DataContext>
                    <CollectionViewSource Source="{Binding Library.LibraryList}">
                        <CollectionViewSource.SortDescriptions>
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>
                </ListView.DataContext>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="imageBorder" BorderBrush="Black" BorderThickness="1" Margin="5" Background="{Binding BackgroundColor}">
                            <Grid>
                                <Image Panel.ZIndex="0" Width="200" Height="200" Source="{Binding Thumbnail}" />
                                <TextBlock Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Medium" FontSize="40">
                                    <TextBlock.Resources>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Opacity, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="0.5">
                                                    <Setter Property="Text" Value="Disabled" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Resources>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </DockPanel>
</Window>